/* Synchronous RAM verilog code */

module SynchronousRAM #(
    parameter DATA_WIDTH = 8,  // Width of each memory word
    parameter ADDR_WIDTH = 4  // Address width (2^ADDR_WIDTH locations)
) (
    input clk,                     // Clock signal
    input we,                      // Write enable
    input [ADDR_WIDTH-1:0] addr,   // Address
    input [DATA_WIDTH-1:0] din,    // Data input (for write)
    output reg [DATA_WIDTH-1:0] dout // Data output (for read)
);

    // Memory array
    reg [DATA_WIDTH-1:0] mem [0:(1 << ADDR_WIDTH)-1];

    // Synchronous read/write logic
    always @(posedge clk) begin
        if (we) begin
            mem[addr] <= din;  // Write operation
        end else begin
            dout <= mem[addr]; // Read operation
        end
    end
endmodule
